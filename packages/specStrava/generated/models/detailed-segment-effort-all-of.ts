/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { MetaActivity } from './meta-activity';
// May contain unused imports in some cases
// @ts-ignore
import { MetaAthlete } from './meta-athlete';
// May contain unused imports in some cases
// @ts-ignore
import { SummarySegment } from './summary-segment';

/**
 * 
 * @export
 * @interface DetailedSegmentEffortAllOf
 */
export interface DetailedSegmentEffortAllOf {
    /**
     * The name of the segment on which this effort was performed
     * @type {string}
     * @memberof DetailedSegmentEffortAllOf
     */
    'name'?: string;
    /**
     * 
     * @type {MetaActivity}
     * @memberof DetailedSegmentEffortAllOf
     */
    'activity'?: MetaActivity;
    /**
     * 
     * @type {MetaAthlete}
     * @memberof DetailedSegmentEffortAllOf
     */
    'athlete'?: MetaAthlete;
    /**
     * The effort\'s moving time
     * @type {number}
     * @memberof DetailedSegmentEffortAllOf
     */
    'moving_time'?: number;
    /**
     * The start index of this effort in its activity\'s stream
     * @type {number}
     * @memberof DetailedSegmentEffortAllOf
     */
    'start_index'?: number;
    /**
     * The end index of this effort in its activity\'s stream
     * @type {number}
     * @memberof DetailedSegmentEffortAllOf
     */
    'end_index'?: number;
    /**
     * The effort\'s average cadence
     * @type {number}
     * @memberof DetailedSegmentEffortAllOf
     */
    'average_cadence'?: number;
    /**
     * The average wattage of this effort
     * @type {number}
     * @memberof DetailedSegmentEffortAllOf
     */
    'average_watts'?: number;
    /**
     * For riding efforts, whether the wattage was reported by a dedicated recording device
     * @type {boolean}
     * @memberof DetailedSegmentEffortAllOf
     */
    'device_watts'?: boolean;
    /**
     * The heart heart rate of the athlete during this effort
     * @type {number}
     * @memberof DetailedSegmentEffortAllOf
     */
    'average_heartrate'?: number;
    /**
     * The maximum heart rate of the athlete during this effort
     * @type {number}
     * @memberof DetailedSegmentEffortAllOf
     */
    'max_heartrate'?: number;
    /**
     * 
     * @type {SummarySegment}
     * @memberof DetailedSegmentEffortAllOf
     */
    'segment'?: SummarySegment;
    /**
     * The rank of the effort on the global leaderboard if it belongs in the top 10 at the time of upload
     * @type {number}
     * @memberof DetailedSegmentEffortAllOf
     */
    'kom_rank'?: number;
    /**
     * The rank of the effort on the athlete\'s leaderboard if it belongs in the top 3 at the time of upload
     * @type {number}
     * @memberof DetailedSegmentEffortAllOf
     */
    'pr_rank'?: number;
    /**
     * Whether this effort should be hidden when viewed within an activity
     * @type {boolean}
     * @memberof DetailedSegmentEffortAllOf
     */
    'hidden'?: boolean;
}

