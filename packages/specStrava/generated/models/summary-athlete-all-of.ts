/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



/**
 * 
 * @export
 * @interface SummaryAthleteAllOf
 */
export interface SummaryAthleteAllOf {
    /**
     * Resource state, indicates level of detail. Possible values: 1 -> \"meta\", 2 -> \"summary\", 3 -> \"detail\"
     * @type {number}
     * @memberof SummaryAthleteAllOf
     */
    'resource_state'?: number;
    /**
     * The athlete\'s first name.
     * @type {string}
     * @memberof SummaryAthleteAllOf
     */
    'firstname'?: string;
    /**
     * The athlete\'s last name.
     * @type {string}
     * @memberof SummaryAthleteAllOf
     */
    'lastname'?: string;
    /**
     * URL to a 62x62 pixel profile picture.
     * @type {string}
     * @memberof SummaryAthleteAllOf
     */
    'profile_medium'?: string;
    /**
     * URL to a 124x124 pixel profile picture.
     * @type {string}
     * @memberof SummaryAthleteAllOf
     */
    'profile'?: string;
    /**
     * The athlete\'s city.
     * @type {string}
     * @memberof SummaryAthleteAllOf
     */
    'city'?: string;
    /**
     * The athlete\'s state or geographical region.
     * @type {string}
     * @memberof SummaryAthleteAllOf
     */
    'state'?: string;
    /**
     * The athlete\'s country.
     * @type {string}
     * @memberof SummaryAthleteAllOf
     */
    'country'?: string;
    /**
     * The athlete\'s sex.
     * @type {string}
     * @memberof SummaryAthleteAllOf
     */
    'sex'?: SummaryAthleteAllOfSexEnum;
    /**
     * Deprecated.  Use summit field instead. Whether the athlete has any Summit subscription.
     * @type {boolean}
     * @memberof SummaryAthleteAllOf
     */
    'premium'?: boolean;
    /**
     * Whether the athlete has any Summit subscription.
     * @type {boolean}
     * @memberof SummaryAthleteAllOf
     */
    'summit'?: boolean;
    /**
     * The time at which the athlete was created.
     * @type {string}
     * @memberof SummaryAthleteAllOf
     */
    'created_at'?: string;
    /**
     * The time at which the athlete was last updated.
     * @type {string}
     * @memberof SummaryAthleteAllOf
     */
    'updated_at'?: string;
}

export const SummaryAthleteAllOfSexEnum = {
    M: 'M',
    F: 'F'
} as const;

export type SummaryAthleteAllOfSexEnum = typeof SummaryAthleteAllOfSexEnum[keyof typeof SummaryAthleteAllOfSexEnum];


