/* tslint:disable */
/* eslint-disable */
/**
 * Strava API v3
 * The [Swagger Playground](https://developers.strava.com/playground) is the easiest way to familiarize yourself with the Strava API by submitting HTTP requests and observing the responses before you write any client code. It will show what a response will look like with different endpoints depending on the authorization scope you receive from your athletes. To use the Playground, go to https://www.strava.com/settings/api and change your “Authorization Callback Domain” to developers.strava.com. Please note, we only support Swagger 2.0. There is a known issue where you can only select one scope at a time. For more information, please check the section “client code” at https://developers.strava.com/docs.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import { SummaryClub } from './summary-club';
// May contain unused imports in some cases
// @ts-ignore
import { SummaryGear } from './summary-gear';

/**
 * 
 * @export
 * @interface DetailedAthleteAllOf
 */
export interface DetailedAthleteAllOf {
    /**
     * The athlete\'s follower count.
     * @type {number}
     * @memberof DetailedAthleteAllOf
     */
    'follower_count'?: number;
    /**
     * The athlete\'s friend count.
     * @type {number}
     * @memberof DetailedAthleteAllOf
     */
    'friend_count'?: number;
    /**
     * The athlete\'s preferred unit system.
     * @type {string}
     * @memberof DetailedAthleteAllOf
     */
    'measurement_preference'?: DetailedAthleteAllOfMeasurementPreferenceEnum;
    /**
     * The athlete\'s FTP (Functional Threshold Power).
     * @type {number}
     * @memberof DetailedAthleteAllOf
     */
    'ftp'?: number;
    /**
     * The athlete\'s weight.
     * @type {number}
     * @memberof DetailedAthleteAllOf
     */
    'weight'?: number;
    /**
     * The athlete\'s clubs.
     * @type {Array<SummaryClub>}
     * @memberof DetailedAthleteAllOf
     */
    'clubs'?: Array<SummaryClub>;
    /**
     * The athlete\'s bikes.
     * @type {Array<SummaryGear>}
     * @memberof DetailedAthleteAllOf
     */
    'bikes'?: Array<SummaryGear>;
    /**
     * The athlete\'s shoes.
     * @type {Array<SummaryGear>}
     * @memberof DetailedAthleteAllOf
     */
    'shoes'?: Array<SummaryGear>;
}

export const DetailedAthleteAllOfMeasurementPreferenceEnum = {
    Feet: 'feet',
    Meters: 'meters'
} as const;

export type DetailedAthleteAllOfMeasurementPreferenceEnum = typeof DetailedAthleteAllOfMeasurementPreferenceEnum[keyof typeof DetailedAthleteAllOfMeasurementPreferenceEnum];


